{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroller.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","style","backgroundImage","CardList","robotsProfiles","map","profile","index","SearchBox","searchChange","type","placeholder","onChange","Scroller","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","respones","json","this","filteredRobots","filter","toLowerCase","includes","length","margin","marginBottom","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAqBeA,EAlBF,SAACC,GAAW,IAChBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACrB,OACC,sBAAKC,UAAU,cAAf,UACC,qBACCA,UAAU,YACVC,MAAO,CACNC,gBAAgB,4BAAD,OAA8BH,EAA9B,YAGjB,sBAAKC,UAAU,aAAf,UACC,oBAAIA,UAAU,WAAd,SAA0BH,IAC1B,mBAAGG,UAAU,cAAb,SAA4BF,WCAjBK,EAbE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACC,qBAAKJ,UAAU,SAAf,SACC,qBAAKA,UAAU,QAAf,SACEI,EAAeC,KAAI,SAACC,EAASC,GAAW,IAChCV,EAAoBS,EAApBT,KAAMC,EAAcQ,EAAdR,MAAOC,EAAOO,EAAPP,GACrB,OAAO,cAAC,EAAD,CAAkBF,KAAMA,EAAMC,MAAOA,EAAOC,GAAIA,GAArCQ,WCKRC,EAXG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,8BACC,uBACAC,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGEI,G,MARE,SAACjB,GACjB,OACC,sBAAKI,UAAU,wBAAf,UACC,qBAAKA,UAAU,oBAAf,SAAoCJ,EAAMkB,WAD3C,SCwDaC,G,wDAtDd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACZlB,eAAgB,GAChBe,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACpB,GAAD,OAAoB,EAAKc,SAAS,CAAEd,wB,oBAO5C,WAAU,IAAD,EACgCuB,KAAKL,MAArClB,EADA,EACAA,eAAgBe,EADhB,EACgBA,YAClBS,EAAiBxB,EAAeyB,QAAO,SAACvB,GAE7C,OADiBA,EAATT,KACIiC,cAAcC,SAASZ,EAAYW,kBAEhD,OAAK1B,EAAe4B,OASlB,sBAAKhC,UAAU,MAAf,UACC,oBACCC,MAAO,CACNgC,OAAQ,MACRC,aAAc,SAHhB,yBAQA,cAAC,EAAD,CAAWzB,aAAckB,KAAKX,iBAC9B,cAAC,EAAD,UACC,qBAAKhB,UAAU,uBAAf,SACC,cAAC,EAAD,CAAUI,eAAgBwB,WAnB7B,sBAAK5B,UAAU,kBAAf,UACC,wCACA,qBAAKA,UAAU,kB,GA7BFmC,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBZ,M","file":"static/js/main.5c6f6013.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../Styles/Card.css\";\r\n\r\nconst Card = (props) => {\r\n\tconst { name, email, id } = props;\r\n\treturn (\r\n\t\t<div className='mainContent'>\r\n\t\t\t<div\r\n\t\t\t\tclassName='roboImage'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundImage: `url(https://robohash.org/${id}.png)`,\r\n\t\t\t\t}}\r\n\t\t\t></div>\r\n\t\t\t<div className='subContent'>\r\n\t\t\t\t<h2 className='header-2'>{name}</h2>\r\n\t\t\t\t<p className='paragraph-1'>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nconst CardList = ({ robotsProfiles }) => {\r\n\treturn (\r\n\t\t<div className='warper'>\r\n\t\t\t<div className='outer'>\r\n\t\t\t\t{robotsProfiles.map((profile, index) => {\r\n\t\t\t\t\tconst { name, email, id } = profile;\r\n\t\t\t\t\treturn <Card key={index} name={name} email={email} id={id} />;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots' \r\n\t\t\tonChange={searchChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"../Styles/Scroller.css\";\r\n\r\nconst Scroller = (props) => {\r\n\treturn (\r\n\t\t<div className=\"mainScrollerContainer\" >\r\n\t\t\t<div className='scrollerContainer'>{props.children}</div>;\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroller;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../Components/CardList\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroller from \"../Components/Scroller\";\r\nimport \"../Styles/App.css\";\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobotsProfiles: [],\r\n\t\t\tsearchField: \"\",\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n\t\t\t.then((respones) => respones.json())\r\n\t\t\t.then((robotsProfiles) => this.setState({ robotsProfiles }));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchField: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { robotsProfiles, searchField } = this.state;\r\n\t\tconst filteredRobots = robotsProfiles.filter((profile) => {\r\n\t\t\tconst { name } = profile;\r\n\t\t\treturn name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t});\r\n\t\tif (!robotsProfiles.length) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='loaderContainer'>\r\n\t\t\t\t\t<h1>Loding</h1>\r\n\t\t\t\t\t<div className='loader'></div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='App'>\r\n\t\t\t\t\t<h1\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmargin: \"0px\",\r\n\t\t\t\t\t\t\tmarginBottom: \"0.2em\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRoboFriends\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t\t<Scroller>\r\n\t\t\t\t\t\t<div className=\"cardListContainerApp\" >\r\n\t\t\t\t\t\t\t<CardList robotsProfiles={filteredRobots} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Scroller>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}